version: 2.1
jobs:
  init:
    description: "Initialize the project"
    docker:
      - image: kaygenzo/android-fastlane:30
    steps:
      - checkout
  build:
    description: "Artifact build"
    docker:
      - image: kaygenzo/android-fastlane:30
    steps:
      - run: ./gradlew assembleProdRelease
  firebase:
    description: "Send built artifact to firebase"
    docker:
      - image: kaygenzo/android-fastlane:30
    steps:
      - run: ./gradlew appDistributionUploadProdRelease
workflows:
  build-deploy:
    jobs:
      - build:
          requires: 
            - init
          pre-steps:
            - run:
                command: |
                  echo $KEYSTORE_FILE | base64 -d > telen.release.jks
                  echo $GOOGLE_SERVICES_FILE | base64 -d > app/google-services.json
          post-steps:
            - run:
                command: |
                  rm telen.release.jks
                  rm app/google-services.json
      - firebase:
          requires: 
            - build
          pre-steps:
            - run:
                command: |
                  echo $APP_DISTRIBUTION_SERVICE_FILE | base64 -d > easylineup-services.json
                  echo $APP_DISTRIBUTION_TESTERS_FILE | base64 -d > testers.txt
                  git rev-parse --abbrev-ref HEAD > releasenotes.txt
                  git log -1 --pretty="%B %ad" >> releasenotes.txt
          post-steps:
            - run:
                command: |
                  rm easylineup-services.json
                  rm testers.txt
                  rm releasenotes.txt



#      - restore_cache:
#          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
#      - run:
#         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
#         command: sudo chmod +x ./gradlew
#      - run:
#          name: Download Dependencies
#          command: ./gradlew androidDependencies
#      - save_cache:
#          paths:
#            - ~/.gradle
#          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
#      - run:
#          name: Run Tests
#          command: ./gradlew lint test
#      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
#          path: app/build/reports
#          destination: reports
#      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
#          path: app/build/test-results
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
