image: kaygenzo/android-fastlane:30

before_script:
  - echo $DEBUG_KEYSTORE_FILE | base64 -d > telen.debug.jks
  - echo $KEYSTORE_FILE | base64 -d > telen.release.jks
  - echo $GOOGLE_SERVICES_FILE | base64 -d > app/google-services.json
  - echo $APP_DISTRIBUTION_SERVICE_FILE | base64 -d > easylineup-services.json
  - echo $APP_DISTRIBUTION_TESTERS_FILE | base64 -d > testers.txt
  - echo $PLAY_STORE_CREDENTIALS | base64 -d > play-store-credentials.json
  - git rev-parse --abbrev-ref HEAD > releasenotes.txt
  - git log -1 --pretty="%B %ad" >> releasenotes.txt
  - ruby --version
  - bundle install

after_script:
  - rm telen.debug.jks
  - rm telen.release.jks
  - rm app/google-services.json
  - rm easylineup-services.json
  - rm testers.txt
  - rm releasenotes.txt
  - rm play-store-credentials.json

stages:
  - build
  - alpha
  - test

alpha:
  stage: alpha
  when: manual
  #  only:
  #    - tags
  script:
    - ./gradlew bundleProdRelease
    - bundle exec fastlane deploy_to_alpha
  artifacts:
    paths:
      - app/build/outputs/apk/prod/release
      - app/build/outputs/mapping/prodRelease/mapping.txt

deployAppDistribution:
  stage: build
  script:
    - ./gradlew assembleProdRelease appDistributionUploadProdRelease
  artifacts:
    paths:
      - app/build/outputs/apk/prod/release
      - app/build/outputs/mapping/prodRelease/mapping.txt

lintProdDebug:
  stage: test
  only:
    - develop
  script:
    - ./gradlew -Pci --console=plain lintProdDebug -PbuildDir=lint
  artifacts:
    name: "lint-reports"
    paths:
      - app/build/reports/lint-results-prodDebug.html
      - app/lint/reports/lint-results-prodDebug.html
      - domain/build/reports/lint-results-prodDebug.html
      - domain/lint/reports/lint-results-prodDebug.html
      - repository/build/reports/lint-results-prodDebug.html
      - repository/lint/reports/lint-results-prodDebug.html

unitTests:
  stage: test
  only:
    - develop
  script:
    - ./gradlew -Pci --console=plain testProdDebugUnitTest

dependencyCheckTests:
  stage: test
  only:
    - develop
  script:
    - ./gradlew -Pci --console=plain dependencyCheckAnalyze --info
  artifacts:
    name: "dependency-check-report"
    paths:
      - app/build/reports/dependency-check-report.html
      - domain/build/reports/dependency-check-report.html
      - repository/build/reports/dependency-check-report.html

assembleAndroidTests:
  stage: test
  only:
    - develop
  script:
    - ./gradlew assembleDemoDebug
    - ./gradlew assembleDemoDebugAndroidTest
  artifacts:
    name: "androidTestBinaries"
    paths:
      - app/build/outputs/apk/demo/debug
      - app/build/outputs/apk/androidTest/demo/debug

#coverageTests:
#  stage: test
#  script:
#    - ./gradlew -Pci --console=plain :app:testProdDebugUnitTestCoverage coveralls