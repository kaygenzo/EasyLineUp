image: openjdk:8-jdk

variables:
  ANDROID_COMPILE_SDK: "28"
  ANDROID_BUILD_TOOLS: "28.0.2"
  ANDROID_SDK_TOOLS:   "4333796"

before_script:
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
  - unzip -d android-sdk-linux android-sdk.zip
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
  - chmod +x ./gradlew
  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
  - set -o pipefail
  - echo $DEBUG_KEYSTORE_FILE | base64 -d > telen.debug.jks
  - echo $KEYSTORE_FILE | base64 -d > telen.release.jks
  - echo $GOOGLE_SERVICES_FILE | base64 -d > app/google-services.json
  - echo $APP_DISTRIBUTION_SERVICE_FILE | base64 -d > easylineup-services.json
  - echo $APP_DISTRIBUTION_TESTERS_FILE | base64 -d > testers.txt

stages:
  - test
  - develop
  - release

assembleProdRelease:
  stage: release
  only:
    - tags
  script:
    - ./gradlew assembleProdRelease
  artifacts:
    paths:
      - app/build/outputs/apk/prod/release
      - app/build/outputs/mapping/prod/release

assembleProdReleaseAndDeployAppDistribution:
  stage: develop
  script:
    - ./gradlew assembleProdRelease appDistributionUploadProdRelease
  artifacts:
    paths:
      - app/build/outputs/apk/prod/release
      - app/build/outputs/mapping/prodRelease

lintProdDebug:
  stage: test
  script:
    - ./gradlew -Pci --console=plain lintProdDebug -PbuildDir=lint
  artifacts:
    name: "reports"
    paths:
      - app/build/reports/lint-results-prodDebug.html
      - app/lint/reports/lint-results-prodDebug.html
      - domain/build/reports/lint-results-prodDebug.html
      - domain/lint/reports/lint-results-prodDebug.html
      - repository/build/reports/lint-results-prodDebug.html
      - repository/lint/reports/lint-results-prodDebug.html

unitTests:
  stage: test
  script:
    - ./gradlew -Pci --console=plain testProdDebugUnitTest

dependencyCheckTests:
  stage: test
  script:
    - ./gradlew -Pci --console=plain dependencyCheckAnalyze --info
  artifacts:
    name: "dependency-check-report"
    paths:
      - app/build/reports/dependency-check-report.html
      - domain/build/reports/dependency-check-report.html
      - repository/build/reports/dependency-check-report.html

#coverageTests:
#  stage: test
#  script:
#    - ./gradlew -Pci --console=plain :app:testProdDebugUnitTestCoverage coveralls
