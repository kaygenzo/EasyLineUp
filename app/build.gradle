apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'com.google.firebase.firebase-perf'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven { url 'https://jitpack.io' }
}

def reportPropertiesFile = rootProject.file("bugbattle.properties")
def reportProperties = new Properties()
reportProperties.load(new FileInputStream(reportPropertiesFile))

def sonarPropertiesFile = rootProject.file("sonar.properties")
def sonarProperties = new Properties()
sonarProperties.load(new FileInputStream(sonarPropertiesFile))

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.telen.easylineup"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1010
        versionName "1.0.10"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary true
        buildConfigField("boolean", "usePrefilledDatabase", "false")
        buildConfigField("String", "ReportToolApiKey", reportProperties['apiKey'])
    }

    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'

    flavorDimensions 'version'

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }

        debug {
            storeFile file(keystoreProperties['debug.storeFile'])
            storePassword keystoreProperties['debug.storePassword']
            keyAlias keystoreProperties['debug.keyAlias']
            keyPassword keystoreProperties['debug.keyPassword']
        }
    }

    productFlavors {
        dev {
            dimension 'version'
        }
        prod {
            dimension 'version'

        }
        demo {
            dimension 'version'
            buildConfigField("boolean", "usePrefilledDatabase", "true")
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            versionNameSuffix "-debug"
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }

    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.annotation:annotation:' + rootProject.androidxLibVersion

    // Testing-only dependencies
    androidTestImplementation 'androidx.test:core:' + rootProject.coreVersion
    androidTestImplementation 'androidx.test:core-ktx:' + rootProject.coreVersion
    androidTestImplementation 'androidx.test.ext:junit:' + rootProject.extJUnitVersion
    androidTestImplementation 'androidx.test.ext:junit-ktx:' + rootProject.extJUnitVersion
    androidTestImplementation 'androidx.test:runner:' + rootProject.runnerVersion
    androidTestImplementation 'androidx.test:rules:' + rootProject.runnerVersion

    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    androidTestImplementation ('tools.fastlane:screengrab:1.2.0') {
        exclude group: 'com.android.support.test.uiautomator', module: 'uiautomator-v18'
    }
    androidTestImplementation('com.schibsted.spain:barista:3.2.0') {
        exclude group: 'org.jetbrains.kotlin' // Only if you already use Kotlin in your project
    }

    testImplementation 'androidx.test:core:' + rootProject.coreVersion
    testImplementation 'androidx.test.ext:junit:' + rootProject.extJUnitVersion
    testImplementation 'junit:junit:4.12'
//    testImplementation 'androidx.test.ext:truth:' + rootProject.extTruthVersion

    implementation "androidx.constraintlayout:constraintlayout:1.1.3"
    implementation "androidx.appcompat:appcompat:1.1.0"
    implementation "com.google.android.material:material:1.1.0-beta01"
    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    implementation 'androidx.multidex:multidex:2.0.1'


    implementation "androidx.room:room-runtime:$room_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"

    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    implementation 'cn.aigestudio.wheelpicker:WheelPicker:1.1.2'

    implementation('com.crashlytics.sdk.android:crashlytics:2.9.9@aar') {
        transitive = true
    }

    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

//    implementation 'com.zhihu.android:matisse:0.5.2-beta4'
    implementation 'com.squareup.picasso:picasso:2.71828'

    implementation 'com.github.qingmei2:rximagepicker:2.4.3'
    // Zhihu picture selector
    implementation 'com.github.qingmei2:rximagepicker_support_zhihu:2.4.3'
    implementation 'com.github.qingmei2:rximagepicker_support:2.4.3'

    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version_ktx"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version_ktx"

    implementation 'com.shuhart.stepview:stepview:1.5.0'

    implementation 'com.makeramen:roundedimageview:2.3.0'

//    implementation 'com.facebook.stetho:stetho:1.5.1'

    implementation 'com.google.code.gson:gson:2.8.5'

    implementation 'pl.hypeapp:materialtimelineview:1.1'

    implementation 'net.cachapa.expandablelayout:expandablelayout:2.9.2'

    implementation 'com.github.mancj:MaterialSearchBar:0.8.2'

    implementation 'com.github.BugBattle:BugBattle-Android-SDK:1.3'

    implementation 'com.orhanobut:dialogplus:1.11@aar'

    implementation 'com.google.firebase:firebase-analytics:17.2.0'
    implementation 'com.google.firebase:firebase-perf:19.0.1'

    implementation 'com.github.f0ris.sweetalert:library:1.6.2'
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'org.sonarqube'

sonarqube {
    properties {
        property "sonar.projectKey",  sonarProperties['sonar.projectKey']
        property "sonar.projectName",  sonarProperties['sonar.projectName']
        property "sonar.projectVersion",  sonarProperties['sonar.projectVersion']
        property "sonar.host.url",  sonarProperties['sonar.host.url']

        property "sonar.language",  sonarProperties['sonar.language']
        property "sonar.sourceEncoding",  sonarProperties['sonar.sourceEncoding']
        property "sonar.java.source",  sonarProperties['sonar.java.source']
        property "sonar.java.target",  sonarProperties['sonar.java.target']

        property "sonar.sources",  sonarProperties['sonar.sources']
        property "sonar.java.binaries",  sonarProperties['sonar.java.binaries']
        property "sonar.profile",  sonarProperties['sonar.profile']
        property "sonar.host.url", sonarProperties['sonar.host.url']
    }
}