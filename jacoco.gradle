apply plugin: 'jacoco'
jacoco {
    toolVersion = "0.8.2"
    reportsDir = file("$buildDir/reports/jacoco")
}

project.afterEvaluate {
    def productFlavorName = "prod"
    def buildTypeName = "debug"
    def sourceName = "${productFlavorName}${buildTypeName.capitalize()}"
    def sourcePath = "${productFlavorName}/${buildTypeName}"

    def testTaskName = "test${sourceName.capitalize()}UnitTest"

    task "${testTaskName}Coverage" (type:JacocoReport, dependsOn: "$testTaskName") {
        group = "Reporting"
        description = "Generate Jacoco coverage reports on the ${sourceName.capitalize()} build."

        def excludes = [
                '**/R.class',
                '**/R$*.class',
                '**/*$ViewInjector*.*',
                '**/BuildConfig.*',
                '**/Manifest*.*',
                '**/*Test*.*',
        ]

        def javaDebugTree = fileTree(
                // Java generated classes on Android project (debug build)
                dir: "${project.buildDir}/intermediates/classes/${sourcePath}",
                excludes: excludes
        )

        def kotlinDebugTree = fileTree(
                // Kotlin generated classes on Android project (debug build)
                dir: "${project.buildDir}/tmp/kotlin-classes/${sourcePath}",
                excludes: excludes
        )

        classDirectories = files([javaDebugTree], [kotlinDebugTree])

        def coverageSourceDirs = [
                "${project.projectDir}/src/main/java",
                "${project.projectDir}/src/main/kotlin",
                "${project.projectDir}/src/$productFlavorName/java",
                "${project.projectDir}/src/$buildTypeName/java",
                "${project.projectDir}/src/$productFlavorName/kotlin",
                "${project.projectDir}/src/$buildTypeName/kotlin"
        ]

        System.out.println("coverageSourceDirs=${coverageSourceDirs}")

        additionalSourceDirs = files(coverageSourceDirs)
        sourceDirectories = files(coverageSourceDirs)
        executionData = files("${project.buildDir}/jacoco/${testTaskName}.exec")

        reports {
            xml.enabled = true
            html.enabled = true
        }
    }
}